--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" LPM_DECODES=24 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_qk9
( 
	data[4..0]	:	input;
	eq[23..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[23..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode152w[2..0]	: WIRE;
	w_anode166w[3..0]	: WIRE;
	w_anode183w[3..0]	: WIRE;
	w_anode193w[3..0]	: WIRE;
	w_anode203w[3..0]	: WIRE;
	w_anode213w[3..0]	: WIRE;
	w_anode223w[3..0]	: WIRE;
	w_anode233w[3..0]	: WIRE;
	w_anode243w[3..0]	: WIRE;
	w_anode255w[2..0]	: WIRE;
	w_anode265w[3..0]	: WIRE;
	w_anode276w[3..0]	: WIRE;
	w_anode286w[3..0]	: WIRE;
	w_anode296w[3..0]	: WIRE;
	w_anode306w[3..0]	: WIRE;
	w_anode316w[3..0]	: WIRE;
	w_anode326w[3..0]	: WIRE;
	w_anode336w[3..0]	: WIRE;
	w_anode347w[2..0]	: WIRE;
	w_anode357w[3..0]	: WIRE;
	w_anode368w[3..0]	: WIRE;
	w_anode378w[3..0]	: WIRE;
	w_anode388w[3..0]	: WIRE;
	w_anode398w[3..0]	: WIRE;
	w_anode408w[3..0]	: WIRE;
	w_anode418w[3..0]	: WIRE;
	w_anode428w[3..0]	: WIRE;
	w_anode439w[2..0]	: WIRE;
	w_anode449w[3..0]	: WIRE;
	w_anode460w[3..0]	: WIRE;
	w_anode470w[3..0]	: WIRE;
	w_anode480w[3..0]	: WIRE;
	w_anode490w[3..0]	: WIRE;
	w_anode500w[3..0]	: WIRE;
	w_anode510w[3..0]	: WIRE;
	w_anode520w[3..0]	: WIRE;
	w_data150w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[23..0] = eq_wire[23..0];
	eq_wire[] = ( ( w_anode520w[3..3], w_anode510w[3..3], w_anode500w[3..3], w_anode490w[3..3], w_anode480w[3..3], w_anode470w[3..3], w_anode460w[3..3], w_anode449w[3..3]), ( w_anode428w[3..3], w_anode418w[3..3], w_anode408w[3..3], w_anode398w[3..3], w_anode388w[3..3], w_anode378w[3..3], w_anode368w[3..3], w_anode357w[3..3]), ( w_anode336w[3..3], w_anode326w[3..3], w_anode316w[3..3], w_anode306w[3..3], w_anode296w[3..3], w_anode286w[3..3], w_anode276w[3..3], w_anode265w[3..3]), ( w_anode243w[3..3], w_anode233w[3..3], w_anode223w[3..3], w_anode213w[3..3], w_anode203w[3..3], w_anode193w[3..3], w_anode183w[3..3], w_anode166w[3..3]));
	w_anode152w[] = ( (w_anode152w[1..1] & (! data_wire[4..4])), (w_anode152w[0..0] & (! data_wire[3..3])), B"1");
	w_anode166w[] = ( (w_anode166w[2..2] & (! w_data150w[2..2])), (w_anode166w[1..1] & (! w_data150w[1..1])), (w_anode166w[0..0] & (! w_data150w[0..0])), w_anode152w[2..2]);
	w_anode183w[] = ( (w_anode183w[2..2] & (! w_data150w[2..2])), (w_anode183w[1..1] & (! w_data150w[1..1])), (w_anode183w[0..0] & w_data150w[0..0]), w_anode152w[2..2]);
	w_anode193w[] = ( (w_anode193w[2..2] & (! w_data150w[2..2])), (w_anode193w[1..1] & w_data150w[1..1]), (w_anode193w[0..0] & (! w_data150w[0..0])), w_anode152w[2..2]);
	w_anode203w[] = ( (w_anode203w[2..2] & (! w_data150w[2..2])), (w_anode203w[1..1] & w_data150w[1..1]), (w_anode203w[0..0] & w_data150w[0..0]), w_anode152w[2..2]);
	w_anode213w[] = ( (w_anode213w[2..2] & w_data150w[2..2]), (w_anode213w[1..1] & (! w_data150w[1..1])), (w_anode213w[0..0] & (! w_data150w[0..0])), w_anode152w[2..2]);
	w_anode223w[] = ( (w_anode223w[2..2] & w_data150w[2..2]), (w_anode223w[1..1] & (! w_data150w[1..1])), (w_anode223w[0..0] & w_data150w[0..0]), w_anode152w[2..2]);
	w_anode233w[] = ( (w_anode233w[2..2] & w_data150w[2..2]), (w_anode233w[1..1] & w_data150w[1..1]), (w_anode233w[0..0] & (! w_data150w[0..0])), w_anode152w[2..2]);
	w_anode243w[] = ( (w_anode243w[2..2] & w_data150w[2..2]), (w_anode243w[1..1] & w_data150w[1..1]), (w_anode243w[0..0] & w_data150w[0..0]), w_anode152w[2..2]);
	w_anode255w[] = ( (w_anode255w[1..1] & (! data_wire[4..4])), (w_anode255w[0..0] & data_wire[3..3]), B"1");
	w_anode265w[] = ( (w_anode265w[2..2] & (! w_data150w[2..2])), (w_anode265w[1..1] & (! w_data150w[1..1])), (w_anode265w[0..0] & (! w_data150w[0..0])), w_anode255w[2..2]);
	w_anode276w[] = ( (w_anode276w[2..2] & (! w_data150w[2..2])), (w_anode276w[1..1] & (! w_data150w[1..1])), (w_anode276w[0..0] & w_data150w[0..0]), w_anode255w[2..2]);
	w_anode286w[] = ( (w_anode286w[2..2] & (! w_data150w[2..2])), (w_anode286w[1..1] & w_data150w[1..1]), (w_anode286w[0..0] & (! w_data150w[0..0])), w_anode255w[2..2]);
	w_anode296w[] = ( (w_anode296w[2..2] & (! w_data150w[2..2])), (w_anode296w[1..1] & w_data150w[1..1]), (w_anode296w[0..0] & w_data150w[0..0]), w_anode255w[2..2]);
	w_anode306w[] = ( (w_anode306w[2..2] & w_data150w[2..2]), (w_anode306w[1..1] & (! w_data150w[1..1])), (w_anode306w[0..0] & (! w_data150w[0..0])), w_anode255w[2..2]);
	w_anode316w[] = ( (w_anode316w[2..2] & w_data150w[2..2]), (w_anode316w[1..1] & (! w_data150w[1..1])), (w_anode316w[0..0] & w_data150w[0..0]), w_anode255w[2..2]);
	w_anode326w[] = ( (w_anode326w[2..2] & w_data150w[2..2]), (w_anode326w[1..1] & w_data150w[1..1]), (w_anode326w[0..0] & (! w_data150w[0..0])), w_anode255w[2..2]);
	w_anode336w[] = ( (w_anode336w[2..2] & w_data150w[2..2]), (w_anode336w[1..1] & w_data150w[1..1]), (w_anode336w[0..0] & w_data150w[0..0]), w_anode255w[2..2]);
	w_anode347w[] = ( (w_anode347w[1..1] & data_wire[4..4]), (w_anode347w[0..0] & (! data_wire[3..3])), B"1");
	w_anode357w[] = ( (w_anode357w[2..2] & (! w_data150w[2..2])), (w_anode357w[1..1] & (! w_data150w[1..1])), (w_anode357w[0..0] & (! w_data150w[0..0])), w_anode347w[2..2]);
	w_anode368w[] = ( (w_anode368w[2..2] & (! w_data150w[2..2])), (w_anode368w[1..1] & (! w_data150w[1..1])), (w_anode368w[0..0] & w_data150w[0..0]), w_anode347w[2..2]);
	w_anode378w[] = ( (w_anode378w[2..2] & (! w_data150w[2..2])), (w_anode378w[1..1] & w_data150w[1..1]), (w_anode378w[0..0] & (! w_data150w[0..0])), w_anode347w[2..2]);
	w_anode388w[] = ( (w_anode388w[2..2] & (! w_data150w[2..2])), (w_anode388w[1..1] & w_data150w[1..1]), (w_anode388w[0..0] & w_data150w[0..0]), w_anode347w[2..2]);
	w_anode398w[] = ( (w_anode398w[2..2] & w_data150w[2..2]), (w_anode398w[1..1] & (! w_data150w[1..1])), (w_anode398w[0..0] & (! w_data150w[0..0])), w_anode347w[2..2]);
	w_anode408w[] = ( (w_anode408w[2..2] & w_data150w[2..2]), (w_anode408w[1..1] & (! w_data150w[1..1])), (w_anode408w[0..0] & w_data150w[0..0]), w_anode347w[2..2]);
	w_anode418w[] = ( (w_anode418w[2..2] & w_data150w[2..2]), (w_anode418w[1..1] & w_data150w[1..1]), (w_anode418w[0..0] & (! w_data150w[0..0])), w_anode347w[2..2]);
	w_anode428w[] = ( (w_anode428w[2..2] & w_data150w[2..2]), (w_anode428w[1..1] & w_data150w[1..1]), (w_anode428w[0..0] & w_data150w[0..0]), w_anode347w[2..2]);
	w_anode439w[] = ( (w_anode439w[1..1] & data_wire[4..4]), (w_anode439w[0..0] & data_wire[3..3]), B"1");
	w_anode449w[] = ( (w_anode449w[2..2] & (! w_data150w[2..2])), (w_anode449w[1..1] & (! w_data150w[1..1])), (w_anode449w[0..0] & (! w_data150w[0..0])), w_anode439w[2..2]);
	w_anode460w[] = ( (w_anode460w[2..2] & (! w_data150w[2..2])), (w_anode460w[1..1] & (! w_data150w[1..1])), (w_anode460w[0..0] & w_data150w[0..0]), w_anode439w[2..2]);
	w_anode470w[] = ( (w_anode470w[2..2] & (! w_data150w[2..2])), (w_anode470w[1..1] & w_data150w[1..1]), (w_anode470w[0..0] & (! w_data150w[0..0])), w_anode439w[2..2]);
	w_anode480w[] = ( (w_anode480w[2..2] & (! w_data150w[2..2])), (w_anode480w[1..1] & w_data150w[1..1]), (w_anode480w[0..0] & w_data150w[0..0]), w_anode439w[2..2]);
	w_anode490w[] = ( (w_anode490w[2..2] & w_data150w[2..2]), (w_anode490w[1..1] & (! w_data150w[1..1])), (w_anode490w[0..0] & (! w_data150w[0..0])), w_anode439w[2..2]);
	w_anode500w[] = ( (w_anode500w[2..2] & w_data150w[2..2]), (w_anode500w[1..1] & (! w_data150w[1..1])), (w_anode500w[0..0] & w_data150w[0..0]), w_anode439w[2..2]);
	w_anode510w[] = ( (w_anode510w[2..2] & w_data150w[2..2]), (w_anode510w[1..1] & w_data150w[1..1]), (w_anode510w[0..0] & (! w_data150w[0..0])), w_anode439w[2..2]);
	w_anode520w[] = ( (w_anode520w[2..2] & w_data150w[2..2]), (w_anode520w[1..1] & w_data150w[1..1]), (w_anode520w[0..0] & w_data150w[0..0]), w_anode439w[2..2]);
	w_data150w[2..0] = data_wire[2..0];
END;
--VALID FILE
